
// This file has been generated by the GUI designer. Do not modify.
namespace R7.Webmaster.Addins.CaseChanger
{
	public partial class CaseChangerWidget
	{
		private global::Gtk.UIManager UIManager;
		
		private global::Gtk.Action actionProcess;
		
		private global::Gtk.Action actionPaste;
		
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.Table table1;
		
		private global::Gtk.Button buttonCopy1;
		
		private global::Gtk.Button buttonCopy2;
		
		private global::Gtk.Button buttonCopy3;
		
		private global::Gtk.Button buttonCopy4;
		
		private global::Gtk.Button buttonCopy5;
		
		private global::Gtk.Entry entryResult1;
		
		private global::Gtk.Entry entryResult2;
		
		private global::Gtk.Entry entryResult3;
		
		private global::Gtk.Entry entryResult4;
		
		private global::Gtk.Entry entryResult5;
		
		private global::Gtk.Entry entrySource;
		
		private global::Gtk.HSeparator hseparator1;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.Label label3;
		
		private global::Gtk.Label label4;
		
		private global::Gtk.Label label5;
		
		private global::Gtk.Label label6;
		
		private global::Gtk.RadioButton radiobutton1;
		
		private global::Gtk.RadioButton radiobutton2;
		
		private global::Gtk.RadioButton radiobutton3;
		
		private global::Gtk.RadioButton radiobutton4;
		
		private global::Gtk.RadioButton radiobutton5;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget R7.Webmaster.Addins.CaseChanger.CaseChangerWidget
			Stetic.BinContainer w1 = global::Stetic.BinContainer.Attach (this);
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w2 = new global::Gtk.ActionGroup ("Default");
			this.actionProcess = new global::Gtk.Action ("actionProcess", global::Mono.Unix.Catalog.GetString ("_Process"), null, "gtk-media-play");
			this.actionProcess.IsImportant = true;
			this.actionProcess.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Process");
			w2.Add (this.actionProcess, null);
			this.actionPaste = new global::Gtk.Action ("actionPaste", global::Mono.Unix.Catalog.GetString ("_Paste"), null, "gtk-paste");
			this.actionPaste.IsImportant = true;
			this.actionPaste.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Paste");
			w2.Add (this.actionPaste, null);
			this.UIManager.InsertActionGroup (w2, 0);
			this.Name = "R7.Webmaster.Addins.CaseChanger.CaseChangerWidget";
			// Container child R7.Webmaster.Addins.CaseChanger.CaseChangerWidget.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.table1 = new global::Gtk.Table (((uint)(7)), ((uint)(4)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			this.table1.BorderWidth = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.buttonCopy1 = new global::Gtk.Button ();
			this.buttonCopy1.CanFocus = true;
			this.buttonCopy1.Name = "buttonCopy1";
			this.buttonCopy1.UseUnderline = true;
			this.buttonCopy1.Label = global::Mono.Unix.Catalog.GetString ("Copy");
			global::Gtk.Image w3 = new global::Gtk.Image ();
			w3.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-copy", global::Gtk.IconSize.Menu);
			this.buttonCopy1.Image = w3;
			this.table1.Add (this.buttonCopy1);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonCopy1]));
			w4.TopAttach = ((uint)(2));
			w4.BottomAttach = ((uint)(3));
			w4.LeftAttach = ((uint)(3));
			w4.RightAttach = ((uint)(4));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.buttonCopy2 = new global::Gtk.Button ();
			this.buttonCopy2.CanFocus = true;
			this.buttonCopy2.Name = "buttonCopy2";
			this.buttonCopy2.UseUnderline = true;
			this.buttonCopy2.Label = global::Mono.Unix.Catalog.GetString ("Copy");
			global::Gtk.Image w5 = new global::Gtk.Image ();
			w5.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-copy", global::Gtk.IconSize.Menu);
			this.buttonCopy2.Image = w5;
			this.table1.Add (this.buttonCopy2);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonCopy2]));
			w6.TopAttach = ((uint)(3));
			w6.BottomAttach = ((uint)(4));
			w6.LeftAttach = ((uint)(3));
			w6.RightAttach = ((uint)(4));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.buttonCopy3 = new global::Gtk.Button ();
			this.buttonCopy3.CanFocus = true;
			this.buttonCopy3.Name = "buttonCopy3";
			this.buttonCopy3.UseUnderline = true;
			this.buttonCopy3.Label = global::Mono.Unix.Catalog.GetString ("Copy");
			global::Gtk.Image w7 = new global::Gtk.Image ();
			w7.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-copy", global::Gtk.IconSize.Menu);
			this.buttonCopy3.Image = w7;
			this.table1.Add (this.buttonCopy3);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonCopy3]));
			w8.TopAttach = ((uint)(4));
			w8.BottomAttach = ((uint)(5));
			w8.LeftAttach = ((uint)(3));
			w8.RightAttach = ((uint)(4));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.buttonCopy4 = new global::Gtk.Button ();
			this.buttonCopy4.CanFocus = true;
			this.buttonCopy4.Name = "buttonCopy4";
			this.buttonCopy4.UseUnderline = true;
			this.buttonCopy4.Label = global::Mono.Unix.Catalog.GetString ("Copy");
			global::Gtk.Image w9 = new global::Gtk.Image ();
			w9.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-copy", global::Gtk.IconSize.Menu);
			this.buttonCopy4.Image = w9;
			this.table1.Add (this.buttonCopy4);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonCopy4]));
			w10.TopAttach = ((uint)(5));
			w10.BottomAttach = ((uint)(6));
			w10.LeftAttach = ((uint)(3));
			w10.RightAttach = ((uint)(4));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.buttonCopy5 = new global::Gtk.Button ();
			this.buttonCopy5.CanFocus = true;
			this.buttonCopy5.Name = "buttonCopy5";
			this.buttonCopy5.UseUnderline = true;
			this.buttonCopy5.Label = global::Mono.Unix.Catalog.GetString ("Copy");
			global::Gtk.Image w11 = new global::Gtk.Image ();
			w11.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-copy", global::Gtk.IconSize.Menu);
			this.buttonCopy5.Image = w11;
			this.table1.Add (this.buttonCopy5);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonCopy5]));
			w12.TopAttach = ((uint)(6));
			w12.BottomAttach = ((uint)(7));
			w12.LeftAttach = ((uint)(3));
			w12.RightAttach = ((uint)(4));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryResult1 = new global::Gtk.Entry ();
			this.entryResult1.CanFocus = true;
			this.entryResult1.Name = "entryResult1";
			this.entryResult1.IsEditable = true;
			this.entryResult1.InvisibleChar = '●';
			this.table1.Add (this.entryResult1);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryResult1]));
			w13.TopAttach = ((uint)(2));
			w13.BottomAttach = ((uint)(3));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryResult2 = new global::Gtk.Entry ();
			this.entryResult2.CanFocus = true;
			this.entryResult2.Name = "entryResult2";
			this.entryResult2.IsEditable = true;
			this.entryResult2.InvisibleChar = '●';
			this.table1.Add (this.entryResult2);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryResult2]));
			w14.TopAttach = ((uint)(3));
			w14.BottomAttach = ((uint)(4));
			w14.LeftAttach = ((uint)(1));
			w14.RightAttach = ((uint)(2));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryResult3 = new global::Gtk.Entry ();
			this.entryResult3.CanFocus = true;
			this.entryResult3.Name = "entryResult3";
			this.entryResult3.IsEditable = true;
			this.entryResult3.InvisibleChar = '●';
			this.table1.Add (this.entryResult3);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryResult3]));
			w15.TopAttach = ((uint)(4));
			w15.BottomAttach = ((uint)(5));
			w15.LeftAttach = ((uint)(1));
			w15.RightAttach = ((uint)(2));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryResult4 = new global::Gtk.Entry ();
			this.entryResult4.CanFocus = true;
			this.entryResult4.Name = "entryResult4";
			this.entryResult4.IsEditable = true;
			this.entryResult4.InvisibleChar = '●';
			this.table1.Add (this.entryResult4);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryResult4]));
			w16.TopAttach = ((uint)(5));
			w16.BottomAttach = ((uint)(6));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(2));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryResult5 = new global::Gtk.Entry ();
			this.entryResult5.CanFocus = true;
			this.entryResult5.Name = "entryResult5";
			this.entryResult5.IsEditable = true;
			this.entryResult5.InvisibleChar = '●';
			this.table1.Add (this.entryResult5);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryResult5]));
			w17.TopAttach = ((uint)(6));
			w17.BottomAttach = ((uint)(7));
			w17.LeftAttach = ((uint)(1));
			w17.RightAttach = ((uint)(2));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entrySource = new global::Gtk.Entry ();
			this.entrySource.CanFocus = true;
			this.entrySource.Name = "entrySource";
			this.entrySource.IsEditable = true;
			this.entrySource.InvisibleChar = '●';
			this.table1.Add (this.entrySource);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table1 [this.entrySource]));
			w18.RightAttach = ((uint)(4));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.table1.Add (this.hseparator1);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator1]));
			w19.TopAttach = ((uint)(1));
			w19.BottomAttach = ((uint)(2));
			w19.RightAttach = ((uint)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 1F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("All Caps:");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w20.TopAttach = ((uint)(2));
			w20.BottomAttach = ((uint)(3));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.Xalign = 1F;
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("All Stroke:");
			this.table1.Add (this.label3);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.table1 [this.label3]));
			w21.TopAttach = ((uint)(3));
			w21.BottomAttach = ((uint)(4));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.Xalign = 1F;
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("Inverted Case:");
			this.table1.Add (this.label4);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.table1 [this.label4]));
			w22.TopAttach = ((uint)(4));
			w22.BottomAttach = ((uint)(5));
			w22.XOptions = ((global::Gtk.AttachOptions)(4));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.Xalign = 1F;
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("Sentence Case:");
			this.table1.Add (this.label5);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.table1 [this.label5]));
			w23.TopAttach = ((uint)(5));
			w23.BottomAttach = ((uint)(6));
			w23.XOptions = ((global::Gtk.AttachOptions)(4));
			w23.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label6 = new global::Gtk.Label ();
			this.label6.Name = "label6";
			this.label6.Xalign = 1F;
			this.label6.LabelProp = global::Mono.Unix.Catalog.GetString ("Words with Caps:");
			this.table1.Add (this.label6);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.table1 [this.label6]));
			w24.TopAttach = ((uint)(6));
			w24.BottomAttach = ((uint)(7));
			w24.XOptions = ((global::Gtk.AttachOptions)(4));
			w24.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobutton1 = new global::Gtk.RadioButton ("");
			this.radiobutton1.CanFocus = true;
			this.radiobutton1.Name = "radiobutton1";
			this.radiobutton1.DrawIndicator = true;
			this.radiobutton1.UseUnderline = true;
			this.radiobutton1.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.table1.Add (this.radiobutton1);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobutton1]));
			w25.TopAttach = ((uint)(2));
			w25.BottomAttach = ((uint)(3));
			w25.LeftAttach = ((uint)(2));
			w25.RightAttach = ((uint)(3));
			w25.XOptions = ((global::Gtk.AttachOptions)(4));
			w25.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobutton2 = new global::Gtk.RadioButton ("");
			this.radiobutton2.CanFocus = true;
			this.radiobutton2.Name = "radiobutton2";
			this.radiobutton2.DrawIndicator = true;
			this.radiobutton2.UseUnderline = true;
			this.radiobutton2.Group = this.radiobutton1.Group;
			this.table1.Add (this.radiobutton2);
			global::Gtk.Table.TableChild w26 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobutton2]));
			w26.TopAttach = ((uint)(3));
			w26.BottomAttach = ((uint)(4));
			w26.LeftAttach = ((uint)(2));
			w26.RightAttach = ((uint)(3));
			w26.XOptions = ((global::Gtk.AttachOptions)(0));
			w26.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobutton3 = new global::Gtk.RadioButton ("");
			this.radiobutton3.CanFocus = true;
			this.radiobutton3.Name = "radiobutton3";
			this.radiobutton3.DrawIndicator = true;
			this.radiobutton3.UseUnderline = true;
			this.radiobutton3.Group = this.radiobutton1.Group;
			this.table1.Add (this.radiobutton3);
			global::Gtk.Table.TableChild w27 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobutton3]));
			w27.TopAttach = ((uint)(4));
			w27.BottomAttach = ((uint)(5));
			w27.LeftAttach = ((uint)(2));
			w27.RightAttach = ((uint)(3));
			w27.XOptions = ((global::Gtk.AttachOptions)(0));
			w27.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobutton4 = new global::Gtk.RadioButton ("");
			this.radiobutton4.CanFocus = true;
			this.radiobutton4.Name = "radiobutton4";
			this.radiobutton4.DrawIndicator = true;
			this.radiobutton4.UseUnderline = true;
			this.radiobutton4.Group = this.radiobutton1.Group;
			this.table1.Add (this.radiobutton4);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobutton4]));
			w28.TopAttach = ((uint)(5));
			w28.BottomAttach = ((uint)(6));
			w28.LeftAttach = ((uint)(2));
			w28.RightAttach = ((uint)(3));
			w28.XOptions = ((global::Gtk.AttachOptions)(0));
			w28.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobutton5 = new global::Gtk.RadioButton ("");
			this.radiobutton5.CanFocus = true;
			this.radiobutton5.Name = "radiobutton5";
			this.radiobutton5.DrawIndicator = true;
			this.radiobutton5.UseUnderline = true;
			this.radiobutton5.Group = this.radiobutton1.Group;
			this.table1.Add (this.radiobutton5);
			global::Gtk.Table.TableChild w29 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobutton5]));
			w29.TopAttach = ((uint)(6));
			w29.BottomAttach = ((uint)(7));
			w29.LeftAttach = ((uint)(2));
			w29.RightAttach = ((uint)(3));
			w29.XOptions = ((global::Gtk.AttachOptions)(0));
			w29.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox1.Add (this.table1);
			global::Gtk.Box.BoxChild w30 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.table1]));
			w30.Position = 0;
			w30.Expand = false;
			w30.Fill = false;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			w1.SetUiManager (UIManager);
			this.Hide ();
			this.actionProcess.Activated += new global::System.EventHandler (this.OnActionProcessActivated);
			this.actionPaste.Activated += new global::System.EventHandler (this.OnActionPasteActivated);
			this.entrySource.Changed += new global::System.EventHandler (this.OnEntrySourceChanged);
			this.buttonCopy5.Clicked += new global::System.EventHandler (this.OnButtonCopy5Clicked);
			this.buttonCopy4.Clicked += new global::System.EventHandler (this.OnButtonCopy4Clicked);
			this.buttonCopy3.Clicked += new global::System.EventHandler (this.OnButtonCopy3Clicked);
			this.buttonCopy2.Clicked += new global::System.EventHandler (this.OnButtonCopy2Clicked);
			this.buttonCopy1.Clicked += new global::System.EventHandler (this.OnButtonCopy1Clicked);
		}
	}
}
