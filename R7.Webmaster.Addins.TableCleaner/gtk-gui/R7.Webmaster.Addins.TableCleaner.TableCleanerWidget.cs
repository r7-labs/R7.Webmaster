
// This file has been generated by the GUI designer. Do not modify.
namespace R7.Webmaster.Addins.TableCleaner
{
	public partial class TableCleanerWidget
	{
		private global::Gtk.UIManager UIManager;
		
		private global::Gtk.Action actionProcess;
		
		private global::Gtk.ToggleAction toggleAutoCopy;
		
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.HBox hbox4;
		
		private global::Gtk.ScrolledWindow GtkScrolledWindow1;
		
		private global::Gtk.TextView txvResult;
		
		private global::Gtk.Table tableClearTablesOptions;
		
		private global::Gtk.ComboBoxEntry centryCssClass;
		
		private global::Gtk.CheckButton checkSetCssClass;
		
		private global::Gtk.CheckButton checkSetWidth;
		
		private global::Gtk.ComboBox comboWidthUnits;
		
		private global::Gtk.SpinButton spinWidth;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget R7.Webmaster.Addins.TableCleaner.TableCleanerWidget
			Stetic.BinContainer w1 = global::Stetic.BinContainer.Attach (this);
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w2 = new global::Gtk.ActionGroup ("Default");
			this.actionProcess = new global::Gtk.Action ("actionProcess", global::Mono.Unix.Catalog.GetString ("_Process"), null, "gtk-media-play");
			this.actionProcess.IsImportant = true;
			this.actionProcess.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Process");
			w2.Add (this.actionProcess, null);
			this.toggleAutoCopy = new global::Gtk.ToggleAction ("toggleAutoCopy", global::Mono.Unix.Catalog.GetString ("_Auto Copy"), null, "gtk-copy");
			this.toggleAutoCopy.Active = true;
			this.toggleAutoCopy.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Auto Copy");
			w2.Add (this.toggleAutoCopy, null);
			this.UIManager.InsertActionGroup (w2, 0);
			this.Name = "R7.Webmaster.Addins.TableCleaner.TableCleanerWidget";
			// Container child R7.Webmaster.Addins.TableCleaner.TableCleanerWidget.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox4 = new global::Gtk.HBox ();
			this.hbox4.Name = "hbox4";
			this.hbox4.Spacing = 6;
			// Container child hbox4.Gtk.Box+BoxChild
			this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
			this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
			this.txvResult = new global::Gtk.TextView ();
			this.txvResult.HeightRequest = 100;
			this.txvResult.CanFocus = true;
			this.txvResult.Name = "txvResult";
			this.txvResult.WrapMode = ((global::Gtk.WrapMode)(3));
			this.GtkScrolledWindow1.Add (this.txvResult);
			this.hbox4.Add (this.GtkScrolledWindow1);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.GtkScrolledWindow1]));
			w4.Position = 0;
			// Container child hbox4.Gtk.Box+BoxChild
			this.tableClearTablesOptions = new global::Gtk.Table (((uint)(3)), ((uint)(3)), false);
			this.tableClearTablesOptions.Name = "tableClearTablesOptions";
			this.tableClearTablesOptions.RowSpacing = ((uint)(6));
			this.tableClearTablesOptions.ColumnSpacing = ((uint)(6));
			// Container child tableClearTablesOptions.Gtk.Table+TableChild
			this.centryCssClass = global::Gtk.ComboBoxEntry.NewText ();
			this.centryCssClass.Name = "centryCssClass";
			this.tableClearTablesOptions.Add (this.centryCssClass);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.tableClearTablesOptions [this.centryCssClass]));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(3));
			w5.XOptions = ((global::Gtk.AttachOptions)(0));
			w5.YOptions = ((global::Gtk.AttachOptions)(0));
			// Container child tableClearTablesOptions.Gtk.Table+TableChild
			this.checkSetCssClass = new global::Gtk.CheckButton ();
			this.checkSetCssClass.CanFocus = true;
			this.checkSetCssClass.Name = "checkSetCssClass";
			this.checkSetCssClass.Label = global::Mono.Unix.Catalog.GetString ("Set CSS Class:");
			this.checkSetCssClass.DrawIndicator = true;
			this.checkSetCssClass.UseUnderline = true;
			this.tableClearTablesOptions.Add (this.checkSetCssClass);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.tableClearTablesOptions [this.checkSetCssClass]));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(0));
			// Container child tableClearTablesOptions.Gtk.Table+TableChild
			this.checkSetWidth = new global::Gtk.CheckButton ();
			this.checkSetWidth.CanFocus = true;
			this.checkSetWidth.Name = "checkSetWidth";
			this.checkSetWidth.Label = global::Mono.Unix.Catalog.GetString ("Set Width:");
			this.checkSetWidth.DrawIndicator = true;
			this.checkSetWidth.UseUnderline = true;
			this.tableClearTablesOptions.Add (this.checkSetWidth);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.tableClearTablesOptions [this.checkSetWidth]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(0));
			// Container child tableClearTablesOptions.Gtk.Table+TableChild
			this.comboWidthUnits = global::Gtk.ComboBox.NewText ();
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("%"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("px"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("pc"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("em"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("ex"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("in"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("pt"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("cm"));
			this.comboWidthUnits.AppendText (global::Mono.Unix.Catalog.GetString ("mm"));
			this.comboWidthUnits.Name = "comboWidthUnits";
			this.comboWidthUnits.Active = 0;
			this.tableClearTablesOptions.Add (this.comboWidthUnits);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.tableClearTablesOptions [this.comboWidthUnits]));
			w8.TopAttach = ((uint)(1));
			w8.BottomAttach = ((uint)(2));
			w8.LeftAttach = ((uint)(2));
			w8.RightAttach = ((uint)(3));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(0));
			// Container child tableClearTablesOptions.Gtk.Table+TableChild
			this.spinWidth = new global::Gtk.SpinButton (0, 10000, 1);
			this.spinWidth.TooltipMarkup = "Width in % for cleaned table";
			this.spinWidth.CanFocus = true;
			this.spinWidth.Name = "spinWidth";
			this.spinWidth.Adjustment.PageIncrement = 10;
			this.spinWidth.ClimbRate = 10;
			this.spinWidth.Numeric = true;
			this.spinWidth.SnapToTicks = true;
			this.spinWidth.Value = 100;
			this.tableClearTablesOptions.Add (this.spinWidth);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.tableClearTablesOptions [this.spinWidth]));
			w9.TopAttach = ((uint)(1));
			w9.BottomAttach = ((uint)(2));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(0));
			this.hbox4.Add (this.tableClearTablesOptions);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.tableClearTablesOptions]));
			w10.Position = 1;
			w10.Expand = false;
			w10.Fill = false;
			this.vbox1.Add (this.hbox4);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox4]));
			w11.Position = 0;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			w1.SetUiManager (UIManager);
			this.Hide ();
			this.actionProcess.Activated += new global::System.EventHandler (this.OnActionProcessActivated);
			this.toggleAutoCopy.Toggled += new global::System.EventHandler (this.OnToggleAutoCopyToggled);
		}
	}
}
