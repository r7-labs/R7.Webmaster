
// This file has been generated by the GUI designer. Do not modify.
namespace R7.Webmaster.Addins.TextCleaner
{
	public partial class TextCleanerWidget
	{
		private global::Gtk.UIManager UIManager;
		
		private global::Gtk.Action actionProcess;
		
		private global::Gtk.ToggleAction toggleAutoCopy;
		
		private global::Gtk.RadioAction radioCopyText;
		
		private global::Gtk.RadioAction radioCopyHtml;
		
		private global::Gtk.RadioAction radioCopyActiveTab;
		
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.HBox hbox4;
		
		private global::Gtk.VBox vbox2;
		
		private global::Gtk.Notebook notebook1;
		
		private global::Gtk.ScrolledWindow GtkScrolledWindow1;
		
		private global::Gtk.TextView txvResult;
		
		private global::Gtk.Label label3;
		
		private global::Gtk.ScrolledWindow GtkScrolledWindow2;
		
		private global::Gtk.TextView textviewText;
		
		private global::Gtk.Label label2;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget R7.Webmaster.Addins.TextCleaner.TextCleanerWidget
			Stetic.BinContainer w1 = global::Stetic.BinContainer.Attach (this);
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w2 = new global::Gtk.ActionGroup ("Default");
			this.actionProcess = new global::Gtk.Action ("actionProcess", global::Mono.Unix.Catalog.GetString ("_Process"), null, "gtk-media-play");
			this.actionProcess.IsImportant = true;
			this.actionProcess.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Process");
			w2.Add (this.actionProcess, null);
			this.toggleAutoCopy = new global::Gtk.ToggleAction ("toggleAutoCopy", global::Mono.Unix.Catalog.GetString ("_Auto Copy"), null, "gtk-copy");
			this.toggleAutoCopy.Active = true;
			this.toggleAutoCopy.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Auto Copy");
			w2.Add (this.toggleAutoCopy, null);
			this.radioCopyText = new global::Gtk.RadioAction ("radioCopyText", global::Mono.Unix.Catalog.GetString ("Copy Text"), null, null, 0);
			this.radioCopyText.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.radioCopyText.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy Text");
			w2.Add (this.radioCopyText, null);
			this.radioCopyHtml = new global::Gtk.RadioAction ("radioCopyHtml", global::Mono.Unix.Catalog.GetString ("Copy HTML"), null, null, 0);
			this.radioCopyHtml.Group = this.radioCopyText.Group;
			this.radioCopyHtml.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy HTML");
			w2.Add (this.radioCopyHtml, null);
			this.radioCopyActiveTab = new global::Gtk.RadioAction ("radioCopyActiveTab", global::Mono.Unix.Catalog.GetString ("Copy Active Tab"), null, null, 0);
			this.radioCopyActiveTab.Group = this.radioCopyHtml.Group;
			this.radioCopyActiveTab.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy Active Tab");
			w2.Add (this.radioCopyActiveTab, null);
			this.UIManager.InsertActionGroup (w2, 0);
			this.Name = "R7.Webmaster.Addins.TextCleaner.TextCleanerWidget";
			// Container child R7.Webmaster.Addins.TextCleaner.TextCleanerWidget.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox4 = new global::Gtk.HBox ();
			this.hbox4.Name = "hbox4";
			this.hbox4.Spacing = 6;
			// Container child hbox4.Gtk.Box+BoxChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.notebook1 = new global::Gtk.Notebook ();
			this.notebook1.CanFocus = true;
			this.notebook1.Name = "notebook1";
			this.notebook1.CurrentPage = 1;
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
			// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
			this.txvResult = new global::Gtk.TextView ();
			this.txvResult.HeightRequest = 100;
			this.txvResult.CanFocus = true;
			this.txvResult.Name = "txvResult";
			this.txvResult.WrapMode = ((global::Gtk.WrapMode)(3));
			this.GtkScrolledWindow1.Add (this.txvResult);
			this.notebook1.Add (this.GtkScrolledWindow1);
			// Notebook tab
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("HTML");
			this.notebook1.SetTabLabel (this.GtkScrolledWindow1, this.label3);
			this.label3.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.GtkScrolledWindow2 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow2.Name = "GtkScrolledWindow2";
			// Container child GtkScrolledWindow2.Gtk.Container+ContainerChild
			this.textviewText = new global::Gtk.TextView ();
			this.textviewText.CanFocus = true;
			this.textviewText.Name = "textviewText";
			this.textviewText.WrapMode = ((global::Gtk.WrapMode)(3));
			this.GtkScrolledWindow2.Add (this.textviewText);
			this.notebook1.Add (this.GtkScrolledWindow2);
			global::Gtk.Notebook.NotebookChild w6 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.GtkScrolledWindow2]));
			w6.Position = 1;
			// Notebook tab
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Plain text");
			this.notebook1.SetTabLabel (this.GtkScrolledWindow2, this.label2);
			this.label2.ShowAll ();
			this.vbox2.Add (this.notebook1);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.notebook1]));
			w7.Position = 0;
			this.hbox4.Add (this.vbox2);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.vbox2]));
			w8.Position = 0;
			this.vbox1.Add (this.hbox4);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox4]));
			w9.Position = 0;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			w1.SetUiManager (UIManager);
			this.Hide ();
			this.actionProcess.Activated += new global::System.EventHandler (this.OnActionProcessActivated);
			this.toggleAutoCopy.Toggled += new global::System.EventHandler (this.OnToggleAutoCopyToggled);
			this.radioCopyText.Activated += new global::System.EventHandler (this.OnRadioCopyActivated);
			this.radioCopyHtml.Activated += new global::System.EventHandler (this.OnRadioCopyActivated);
			this.radioCopyActiveTab.Activated += new global::System.EventHandler (this.OnRadioCopyActivated);
		}
	}
}
